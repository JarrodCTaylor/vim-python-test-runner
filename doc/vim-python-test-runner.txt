*vim-python-test-runner.txt* A Django aware testsrunner for vim.
Allows you to run Django unit tests that require database interactions, with
django-nose as well as unit tests outside of a Django project with nosetests.

===============================================================================
CONTENTS


    1. Intro .............................................. |test-runner-intro|
    2. Installation ................................ |test-runner-installation|
    3. Requirements ................................ |test-runner-requirements|
    4. Usage .............................................. |test-runner-usage|
    5. Config File .................................. |test-runner-config-file|
        5.1 Config file contents........................ |config-file-contents|
            5.1.1 ........................................... |required-fields|
            5.1.2 ........................................... |optional-fields|
            5.1.3 ............................ |vim-django-config-file-example|
        5.2 Outside of Django................. |plugin-usage-outside-of-django|
    6. Licence .......................................... |test-runner-licence|
    7. Bugs ................................................ |test-runner-bugs|
===============================================================================
1. Intro                                                    *test-runner-intro*

A simple way of running tests for your python files from within VIM.

This plugin was created to allow running Django tests with django-nose that
require database interaction from within Vim. Thus avoiding the need to toggle
between your vim session and the shell for longer periods of time. It will
also run your regular python unit tests with nosetests as well when not
working on a Django project.

===============================================================================
2. Installation                                      *test-runner-installation*

Use your plugin manager of choice.

- [Pathogen](https://github.com/tpope/vim-pathogen)
  - `git clone https://github.com/JarrodCTaylor/vim-python-test-runner ~/.vim/bundle/vim-python-test-runner`
- [Vundle](https://github.com/gmarik/vundle)
  - Add `Bundle 'https://github.com/JarrodCTaylor/vim-python-test-runner'` to .vimrc
  - Run `:BundleInstall`
- [NeoBundle](https://github.com/Shougo/neobundle.vim)
  - Add `NeoBundle 'https://github.com/JarrodCTaylor/vim-python-test-runner'` to .vimrc
  - Run `:NeoBundleInstall`
- [vim-plug](https://github.com/junegunn/vim-plug)
  - Add `Plug 'https://github.com/JarrodCTaylor/vim-python-test-runner'` to .vimrc
  - Run `:PlugInstall`

===============================================================================
3. Requirements                                      *test-runner-requirements*

You need a VIM version that was compiled with python support, which is typical
for most distributions on Linux/Mac.  You can check this by running
``vim --version | grep +python``
if you get a hit you are in business.

Tests are ran with either django-nose or nosetest so these will need to be
pip installed in order for the plugin to function properly.

===============================================================================
4. Usage                                                    *test-runner-usage*

The plugin provides eight commands:

    DjangoTestApp
    DjangoTestFile
    DjangoTestClass
    DjangoTestMethod
    NosetestFile
    NosetestClass
    NosetestMethod
    RerunLastTests

All arguments can be tab-completed. Ensure that your cursor is within a
file, class or method as appropriate for the command being called.

For ease of usage you can map the above actions to a shortcut. For example,
if you wanted leader mappings you could set something like the following in
your vimrc:

    nnoremap<Leader>da :DjangoTestApp<CR>
    nnoremap<Leader>df :DjangoTestFile<CR>
    nnoremap<Leader>dc :DjangoTestClass<CR>
    nnoremap<Leader>dm :DjangoTestMethod<CR>
    nnoremap<Leader>nf :NosetestFile<CR>
    nnoremap<Leader>nc :NosetestClass<CR>
    nnoremap<Leader>nm :NosetestMethod<CR>
    nnoremap<Leader>rr :RerunLastTests<CR>

Your tests results will be available in the quickfix window after they finish
running and you return to your Vim buffer. Open quickfix with `:copen` and
you can jump to failing tests by placing your cursor on the desired test and
pressing enter.

===============================================================================
5. Config File                                        *test-runner-config-file*

To make use of the plugin for Django projects you will need to create a small
config file named ``.vim-django`` in the root of your project that defines some
information about the apps you would like to run tests for. Assuming a basic
folder structure the config file would be saved in the following location.
```
── Project Root
   ├── .vim-django
   ├── manage.py
   ├── app1
   │   └── tests
   │       └── testsa1.py
   └── app2
       └── tests
           ├── testsb1.py
           └── testsb2.py
```

--------------------------------------------------------------------------------
5.1 Config file contents                                  *config-file-contents*

5.1.1                                                          *required-fields*

The only required field is a list of the app names that you will be running
tests for.
`"app_name": "app1, app2"`

5.1.2                                                          *optional-fields*

Optional fields that can be set in the vim-django config file are as follows:
- `environment`: If you have modifyed your manage.py file to accept an environment argument
                 then you may use the environment flag to specify which one to run tests for.
                 Example `"environment": "dev"` If you haven't modifyed your manage.py file
                 then you don't need to use this.

- `failfast`:    Enable the django-nose builtin failfast option by specifying
                 failfast to be true. Example `"failfast": true`

- `nocapture`:   Enable the django-nose builtin nocapture option by specifiying
                 nocapture to be true. Example `"nocapture": true`

5.1.3                                           *vim-django-config-file-example*

Using the example project above we would set the app name to "app1, app2"
The environment field is optional.  We are also saying that we want the test to use
the fail fast option.

```
{"app_name": "app1, app2",
 "environment": "OptionalNameOfEnv",
 "failfast": true}
```
*NOTE* be sure to use double quotes in the config file as it is parsed as json

--------------------------------------------------------------------------------
5.2 Outside of Django                           *plugin-usage-outside-of-django*

Nothing other than nose is required to use this plugin for tests that are
outside of a Django application.

===============================================================================
6. Licence                                                *test-runner-licence*

The MIT License (MIT)

Copyright (c) 2013 Jarrod Taylor
<jarrod [dot] c [dot] taylor [at] gmail [dot] com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
===============================================================================
7. Bugs                                                      *test-runner-bugs*

If you find a bug please post it on the issue tracker:
https://github.com/JarrodCTaylor/vim-python-test-runner/issues
===============================================================================

" vim: ft=help"
